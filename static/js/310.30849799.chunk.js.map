{"version":3,"file":"static/js/310.30849799.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListItem = styled.ul`\n    list-style-type: none;\n    margin: 15px 0;\n    text-decoration: none;\n    color: black;\n\n    &:hover {\n        color: orange;\n    }\n`","import { Link, useLocation, useSearchParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { fetchMoviesWithQuery } from '../../services/api'\nimport { MoviesListItem } from './Movies.styled'\n\nexport const Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams()\n    const location = useLocation()\n\n    const movieTitle = searchParams.get('query') ?? ''\n\n    useEffect(() => {\n        const searchedMovies = async () => {\n            const listOfMovies = await fetchMoviesWithQuery(movieTitle)\n            setMovies(listOfMovies)\n        }\n        searchedMovies()\n    }, [movieTitle])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const form = e.currentTarget\n        setSearchParams({ query: form.elements.query.value })\n        form.reset()\n    }\n\n    return (\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"query\" />\n                <button type=\"submit\">Search</button>\n            </form>\n            {movies.length > 0 ? (\n                <ul>\n                    {movies.map((movie) => (\n                        <li key={movie.id}>\n                        <Link to={`${movie.id}`} state={{ from: location }}>\n                            <MoviesListItem>\n                                {movie.title}\n                            </MoviesListItem>\n                        </Link>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                ''\n            )}\n        </main>\n    )\n}","import axios from 'axios'\n\nconst API_KEY = '1af1e0e33f2f52b98c691eb0f6ce91f5'\nconst API_URL = 'https://api.themoviedb.org/3/'\n\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(API_URL + 'trending/movie/day', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data.results\n}\n\nexport const fetchMovieDetailsWithId = async (id) => {\n    const response = await axios.get(API_URL + 'movie/' + id, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data\n}\n\nexport const fetchMoviesWithQuery = async (query) => {\n    const response = await axios.get(API_URL + 'search/movie', {\n        params: {\n            api_key: API_KEY,\n            query: query,\n        },\n    })\n\n    return response.data.results\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(API_URL + 'movie/' + id + '/credits', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data.cast\n}\n\nexport const fetchMovieReviews = async (id) => {\n    const response = await axios.get(API_URL + 'movie/' + id + '/reviews', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data.results\n}"],"names":["MoviesListItem","styled","_templateObject","_taggedTemplateLiteral","Movies","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","movieTitle","get","useEffect","searchedMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","listOfMovies","_context","prev","next","fetchMoviesWithQuery","sent","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","form","currentTarget","query","elements","value","reset","_jsx","type","name","length","map","movie","Link","to","concat","id","state","from","title","API_KEY","API_URL","fetchMovieDetailsWithId","_ref2","_callee2","response","_context2","axios","params","api_key","abrupt","data","_x","_ref3","_callee3","_context3","results","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
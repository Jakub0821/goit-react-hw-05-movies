{"version":3,"file":"static/js/33.7a8394f4.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Button = styled.button`\n    padding: 8px 16px;\n    border-width: 0;\n    border-radius: 4px;\n    text-decoration: none;\n    font-weight: 500;\n    cursor: pointer;\n    color: white;\n    background-color: orange;\n    margin-bottom: 10px;\n`\n\nexport const Details = styled.div`\n    display: flex;\n    border-bottom: 1px solid black;\n    gap: 10px;\n`\nexport const Description = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`\n\nexport const Additional = styled.div`\n    padding-top: 10px;\n    border-bottom: 1px solid black;\n`\nexport const Item = styled(Link)`\n    text-decoration: none;\n    color: black;\n\n    &:hover {\n        color: orange;\n    }\n`","import { useEffect, useState } from 'react'\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom'\nimport { fetchMovieDetailsWithId } from '../../services/api'\nimport { Button, Details, Description, Additional, Item } from './MovieDetails.styled'\n\nexport const MovieDetails = () => {\n    const [details, setDetails] = useState({})\n    const { id } = useParams()\n\n    useEffect(() => {\n        const asyncFunction = async () => {\n            try {\n                setDetails(await fetchMovieDetailsWithId(id))\n            } catch (error) {\n                console.log('Error: ', error)\n            }\n        }\n        asyncFunction()\n    }, [id])\n\n    const getGenres = () => {\n        const genres = details.genres.map((genre) => genre.name).join(' ')\n        return genres\n    }\n\n    const location = useLocation()\n    const backLinkHref = location.state?.from ?? '/movies'\n\n    const { title, release_date, poster_path, vote_average, overview, genres } =\n        details\n\n    return (\n        <main>\n            <Link to={backLinkHref}>\n                <Button>&#x2190; Go back</Button>\n            </Link>\n            <Details>\n                <img\n                    src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                    alt={title}\n                    width={350}\n                />\n                <Description>\n                    <h2>\n                        {title}({release_date ? release_date.slice(0, 4) : ''})\n                    </h2>\n                    <span>User score: {Math.round(vote_average * 10)}%</span>\n\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n\n                    <h3>Genres</h3>\n                    {genres ? getGenres() : ''}\n                </Description>\n            </Details>\n            <Additional>\n                <span>Additional information</span>\n                <ul>\n                    <li>\n                        <Item to=\"cast\">\n                            Cast\n                        </Item>\n                    </li>\n                    <li>\n                        <Item to=\"reviews\">Reviews</Item>\n                    </li>\n                </ul>\n            </Additional>\n            <div>\n                <Outlet />\n            </div>\n        </main>\n    )\n}","import axios from 'axios'\n\nconst API_KEY = '1af1e0e33f2f52b98c691eb0f6ce91f5'\nconst API_URL = 'https://api.themoviedb.org/3/'\n\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(API_URL + 'trending/movie/day', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data.results\n}\n\nexport const fetchMovieDetailsWithId = async (id) => {\n    const response = await axios.get(API_URL + 'movie/' + id, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data\n}\n\nexport const fetchMoviesWithQuery = async (query) => {\n    const response = await axios.get(API_URL + 'search/movie', {\n        params: {\n            api_key: API_KEY,\n            query: query,\n        },\n    })\n\n    return response.data.results\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(API_URL + 'movie/' + id + '/credits', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data.cast\n}\n\nexport const fetchMovieReviews = async (id) => {\n    const response = await axios.get(API_URL + 'movie/' + id + '/reviews', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n\n    return response.data.results\n}"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Details","_templateObject2","Description","_templateObject3","Additional","_templateObject4","Item","Link","_templateObject5","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","details","setDetails","id","useParams","useEffect","asyncFunction","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","t0","fetchMovieDetailsWithId","t1","sent","t2","console","log","stop","apply","arguments","backLinkHref","useLocation","state","from","title","release_date","poster_path","vote_average","overview","genres","_jsxs","children","_jsx","to","src","concat","alt","width","slice","Math","round","map","genre","name","join","Outlet","API_KEY","API_URL","_ref2","_callee2","response","_context2","axios","params","api_key","abrupt","data","_x","fetchMoviesWithQuery","_ref3","_callee3","query","_context3","results","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}